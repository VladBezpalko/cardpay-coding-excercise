- hosts: all
  remote_user: ubuntu

  vars_files:
    - secrets.yml
    - vars.yml

  vars:
    git_repo: git@github.com:VladBezpalko/cardpay-coding-excercise.git 
    project_name: cardpay
    ansible_effective_user: ubuntu
    home_dir: "/home/{{ ansible_effective_user }}"
    project_dir: "{{ home_dir }}/{{ project_name }}"
    venv_path: "{{ project_dir }}/venv"

  tasks:
  - name: Create the SSH private key file
    copy: 
      content: "{{ git_ssh_priv_key }}"
      dest: /home/ubuntu/.ssh/github
      mode: 0600
    tags:
      - setup

  - name: Clone git repository
    become: yes
    git:
      repo: "{{ git_repo }}"
      dest: "{{ project_dir }}"
      key_file: /home/ubuntu/.ssh/github
      accept_hostkey: yes
    tags:
      - setup
      - update
    notify:
      - Restart app

  - name: Chown project dir
    become: yes
    file:
      path: "{{ project_dir }}"
      owner: "{{ ansible_effective_user }}"
      recurse: yes
      mode: u=rwX
    tags:
      - setup

  - name: Install base packages
    become: yes
    apt:
      state: present
      name:
        - build-essential
        - python3-pip
        - python3-dev
        - python3-virtualenv
        - nginx
        - supervisor
    tags:
      - packages
      - setup

  - name: Upgrade pip
    pip:
      name: pip
      state: latest
    tags:
      - packages
      - setup

  - name: Create virtualenv
    command:
      cmd: virtualenv {{ venv_path }} -p python3
      creates: "{{ venv_path }}/bin/activate"
    tags:
      - setup

  - name: Install requiremets
    pip:
      requirements: "{{ project_dir }}/requirements.txt"
      virtualenv: "{{ venv_path }}"
      virtualenv_python: python3
    tags:
      - setup
      - code
    notify:
      - Restart app

  - name: Install gunicorn with pip
    pip:
      name: gunicorn
      state: present
      virtualenv: "{{ venv_path }}"
      virtualenv_python: python3
    tags:
      - packages
      - gunicorn
      - setup

  - name: Put .env file
    template:
      src: templates/.env.j2
      dest: "{{ project_dir }}/src/.env"
      owner: "{{ ansible_effective_user }}"
    tags:
      - setup

  - name: Copy nginx config
    become: yes
    template:
      src: templates/nginx.conf.j2
      dest: /etc/nginx/nginx.conf
    tags:
      - setup
      - nginx

  - name: Remove default nginx site
    become: yes
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    tags:
      - setup

  - name: Create nginx site config
    become: yes
    template:
      src: templates/nginx_site.conf.j2
      dest: "/etc/nginx/sites-available/{{ project_name }}.conf"
    tags:
      - setup
      - nginx
    notify:
      - Restart nginx

  - name: Link nginx config
    become: yes
    file:
      src: "/etc/nginx/sites-available/{{ project_name }}.conf"
      dest: "/etc/nginx/sites-enabled/{{ project_name }}.conf"
      state: link
    tags:
      - setup

  - name: Copy gunicorn config
    template:
      src: templates/gunicorn_conf.py.j2
      dest: "{{ project_dir }}/gunicorn_conf.py"
    tags:
      - setup
      - gunicorn

  - name: Create supervisord config folder
    become: yes
    file:
      dest: /etc/supervisor
      state: directory
    tags:
      - supervisor

  - name: Create supervisor program config
    become: yes
    template:
      src: templates/supervisor_process.conf.j2
      dest: "/etc/supervisor/conf.d/{{ project_name }}.conf"
    notify:
      - Restart app
    tags:
      - supervisor

  - name: Start nginx
    service: name=nginx state=started
    tags:
      - setup

  - name: Start app
    supervisorctl:
      name: app
      state: started

  handlers:
  - name: Restart app
    become: yes
    supervisorctl:
      name: app
      state: restarted

  - name: Restart nginx
    service:
      name: nginx
      state: restarted
